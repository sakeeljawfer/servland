---
---

<div 
  id="cookie-banner" 
  class="fixed bottom-0 left-0 right-0 bg-white/95 dark:bg-gray-800/95 shadow-lg z-50 transition-transform duration-300 transform translate-y-full backdrop-blur-sm"
  style="display: none;"
>
  <div class="max-w-screen-xl mx-auto p-4">
    <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
      <div class="text-sm text-gray-700 dark:text-gray-300 space-y-2">
        <p>
          Tarayıcı deneyiminizi geliştirmek için çerezler kullanıyoruz. Temel çerezler, web sitesinin düzgün çalışması için gereklidir.
        </p>
        <p class="text-xs">
          Tümünü Kabul Et” seçeneğine tıklayarak TÜM çerezlerin kullanımına onay vermiş olursunuz. Sadece gerekli çerezlere izin vermek için “Yalnızca Gerekli”yi tıklayın.
        </p>
      </div>
      <div class="flex flex-col sm:flex-row gap-2">
        <button
          id="accept-all-cookies"
          class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors whitespace-nowrap"
        >
          Tümünü Kabul Et
        </button>
        <button
          id="accept-essential-cookies"
          class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors whitespace-nowrap"
        >
          Yalnızca Gerekli
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  class CookieManager {
    constructor() {
      this.cookieName = 'cookieConsent';
      this.essentialCookies = ['cookieConsent']; // Add other essential cookie names here
    }

    setCookie(name, value, days = 365) {
      const date = new Date();
      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
      const expires = `expires=${date.toUTCString()}`;
      const sameSite = 'SameSite=Lax';
      document.cookie = `${name}=${value};${expires};${sameSite};path=/`;
    }

    getCookie(name) {
      const nameEQ = name + "=";
      const ca = document.cookie.split(';');
      for(let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
      }
      return null;
    }

    setConsent(type) {
      // Always set the cookie in both localStorage and as an actual cookie
      this.setCookie(this.cookieName, type);
      try {
        localStorage.setItem(this.cookieName, type);
      } catch (e) {
        console.warn('localStorage not available');
      }
    }

    getConsent() {
      // Check both cookie and localStorage
      const cookieValue = this.getCookie(this.cookieName);
      if (cookieValue) return cookieValue;

      try {
        const localValue = localStorage.getItem(this.cookieName);
        if (localValue) {
          // Sync cookie if only found in localStorage
          this.setCookie(this.cookieName, localValue);
          return localValue;
        }
      } catch (e) {
        console.warn('localStorage not available');
      }

      return null;
    }
  }

  function showBanner(banner) {
    if (banner) {
      banner.style.display = 'block';
      // Small delay to ensure the display change has taken effect
      setTimeout(() => {
        banner.classList.remove('translate-y-full');
      }, 50);
    }
  }

  function hideBanner(banner) {
    if (banner) {
      banner.classList.add('translate-y-full');
      // Wait for transition to complete before hiding
      setTimeout(() => {
        banner.style.display = 'none';
      }, 300);
    }
  }

  // Initialize when DOM is fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    const banner = document.getElementById('cookie-banner');
    const acceptAllBtn = document.getElementById('accept-all-cookies');
    const essentialBtn = document.getElementById('accept-essential-cookies');
    const cookieManager = new CookieManager();

    // Check for existing consent
    const existingConsent = cookieManager.getConsent();
    
    if (!existingConsent) {
      showBanner(banner);
    }

    acceptAllBtn?.addEventListener('click', () => {
      cookieManager.setConsent('all');
      hideBanner(banner);
    });

    essentialBtn?.addEventListener('click', () => {
      cookieManager.setConsent('essential');
      hideBanner(banner);
    });
  });
</script>
